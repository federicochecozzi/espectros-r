#las variables relevantes son las longitudes de onda, el número de medición/barrido es un identificador
datos.tidy <-  datos.muestras %>%
gather(key = "Nbarrido", value = "Intensidad", Measure1, Measure2, Measure3,Measure4, Measure5, Measure6,Measure7, Measure8, Measure9,Measure10, Measure11) %>%
spread(key = Wavelength, value = "Intensidad") %>%
select(grupo,everything())
View(datos.tidy)
datos.muestras <- cargar.muestras(.nombre.archivos, "data/")
#añado columna con el grupo al que pertenece cada muestra (un grupo corresponde a un compuesto)
datos.muestras <- mutate(datos.muestras, grupo = factor(str_remove(archivo,"[123]")))
#limpieza de columnas, la tabla de datos posee muchas columnas redundantes (se puede apreciar en los warnings)
datos.muestras <- datos.muestras %>%
select(`Wavelength [nm]`,Intensity,intensity,intensity_1,intensity_2,intensity_3,intensity_4,intensity_5,intensity_6,intensity_7,intensity_8,intensity_9,archivo,grupo) %>%
rename(`1` = Intensity,Measure2 = intensity,Measure3 = intensity_1,Measure4 = intensity_2,Measure5 = intensity_3,Measure6 = intensity_4,Measure7 = intensity_5,Measure8 = intensity_6,Measure9 = intensity_7,Measure10 = intensity_8,Measure11 = intensity_9, Wavelength = `Wavelength [nm]`)
View(datos.muestras)
datos.muestras <- cargar.muestras(.nombre.archivos, "data/")
#añado columna con el grupo al que pertenece cada muestra (un grupo corresponde a un compuesto)
datos.muestras <- mutate(datos.muestras, grupo = factor(str_remove(archivo,"[123]")))
#limpieza de columnas, la tabla de datos posee muchas columnas redundantes (se puede apreciar en los warnings)
datos.muestras <- datos.muestras %>%
select(`Wavelength [nm]`,Intensity,intensity,intensity_1,intensity_2,intensity_3,intensity_4,intensity_5,intensity_6,intensity_7,intensity_8,intensity_9,archivo,grupo) %>%
rename(Measure1 = Intensity,Measure2 = intensity,Measure3 = intensity_1,Measure4 = intensity_2,Measure5 = intensity_3,Measure6 = intensity_4,Measure7 = intensity_5,Measure8 = intensity_6,Measure9 = intensity_7,Measure10 = intensity_8,Measure11 = intensity_9, Wavelength = `Wavelength [nm]`)
#preguntas iniciales: ¿necesitamos varios espectros por muestra? ¿qué correlación tienen los espectros?
#las variables relevantes son las longitudes de onda, el número de medición/barrido es un identificador
datos.tidy <-  datos.muestras %>%
gather(key = "Nbarrido", value = "Intensidad", Measure1, Measure2, Measure3,Measure4, Measure5, Measure6,Measure7, Measure8, Measure9,Measure10, Measure11) %>%
spread(key = Wavelength, value = "Intensidad") %>%
select(grupo,everything())
"PE1" + "Barrido1"
c("PE1" ,"Barrido1")
str_c("PE1","Barrido1")
str_c("PE1","Barrido1",sep = "-")
rownames(datos.tidy)
str_c(datos.tidy$archivo,"-",str_remove(datos.tidy$Nbarrido,"Measure"))
library(tidyverse)
str_c(datos.tidy$archivo,"-",str_remove(datos.tidy$Nbarrido,"Measure"))
head(datos.tidy)
rownames(datos.tidy)<-str_c(datos.tidy$archivo,"-B",str_remove(datos.tidy$Nbarrido,"Measure"))
View(datos.tidy)
datos.tidy["PE1-B1"]
datos.tidy["PE1-B1",]
library(tidyverse)
if(archivo == "PE1" || archivo == "PE2") (Nbarrido == "Measure3" || Nbarrido == "Measure4" || Nbarrido == "Measure5") else (Nbarrido == "Measure2" || Nbarrido == "Measure3" || Nbarrido == "Measure4")
#preguntas iniciales: ¿necesitamos varios espectros por muestra? ¿qué correlación tienen los espectros?
#las variables relevantes son las longitudes de onda, el número de medición/barrido es un identificador
datos.tidy <-  datos.muestras %>%
gather(key = "Nbarrido", value = "Intensidad", Measure1, Measure2, Measure3,Measure4, Measure5, Measure6,Measure7, Measure8, Measure9,Measure10, Measure11) %>%
spread(key = Wavelength, value = "Intensidad") %>%
select(grupo,everything()) %>% #reordenando las variables para mayor comodidad
filter(if(archivo == "PE1" || archivo == "PE2") (Nbarrido == "Measure3" || Nbarrido == "Measure4" || Nbarrido == "Measure5") else (Nbarrido == "Measure2" || Nbarrido == "Measure3" || Nbarrido == "Measure4"))
#etiquetando para facilitar trabajo futuro
rownames(datos.tidy)<-str_c(datos.tidy$archivo,"-B",str_remove(datos.tidy$Nbarrido,"Measure"))
View(datos.tidy)
#preguntas iniciales: ¿necesitamos varios espectros por muestra? ¿qué correlación tienen los espectros?
#las variables relevantes son las longitudes de onda, el número de medición/barrido es un identificador
datos.tidy <-  datos.muestras %>%
gather(key = "Nbarrido", value = "Intensidad", Measure1, Measure2, Measure3,Measure4, Measure5, Measure6,Measure7, Measure8, Measure9,Measure10, Measure11) %>%
spread(key = Wavelength, value = "Intensidad") %>%
select(grupo,everything())  #reordenando las variables para mayor comodidad
if(datos.tidy$archivo == "PE1" || datos.tidy$archivo == "PE2") (datos.tidy$Nbarrido == "Measure3" || datos.tidy$Nbarrido == "Measure4" || datos.tidy$Nbarrido == "Measure5") else (datos.tidy$Nbarrido == "Measure2" || datos.tidy$Nbarrido == "Measure3" || datos.tidy$Nbarrido == "Measure4")
datos.tidy$archivo == "PE1"
View(datos.tidy)
datos.tidy$archivo == "PE1" || datos.tidy$archivo == "PE2"
datos.tidy$Nbarrido == "Measure3"
?Comparison
datos.tidy$archivo == "PE1" | datos.tidy$archivo == "PE2"
#preguntas iniciales: ¿necesitamos varios espectros por muestra? ¿qué correlación tienen los espectros?
#las variables relevantes son las longitudes de onda, el número de medición/barrido es un identificador
datos.tidy <-  datos.muestras %>%
gather(key = "Nbarrido", value = "Intensidad", Measure1, Measure2, Measure3,Measure4, Measure5, Measure6,Measure7, Measure8, Measure9,Measure10, Measure11) %>%
spread(key = Wavelength, value = "Intensidad") %>%
select(grupo,everything()) %>% #reordenando las variables para mayor comodidad
filter(if(archivo == "PE1" | archivo == "PE2") (Nbarrido == "Measure3" | Nbarrido == "Measure4" | Nbarrido == "Measure5") else (Nbarrido == "Measure2" | Nbarrido == "Measure3" | Nbarrido == "Measure4"))
View(datos.tidy)
#preguntas iniciales: ¿necesitamos varios espectros por muestra? ¿qué correlación tienen los espectros?
#las variables relevantes son las longitudes de onda, el número de medición/barrido es un identificador
datos.tidy <-  datos.muestras %>%
gather(key = "Nbarrido", value = "Intensidad", Measure1, Measure2, Measure3,Measure4, Measure5, Measure6,Measure7, Measure8, Measure9,Measure10, Measure11) %>%
spread(key = Wavelength, value = "Intensidad") %>%
select(grupo,everything()) %>% #reordenando las variables para mayor comodidad
filter(((archivo == "PE1" | archivo == "PE2") & (Nbarrido == "Measure3" | Nbarrido == "Measure4" | Nbarrido == "Measure5") ) | ((archivo != "PE1" & archivo != "PE2") & (Nbarrido == "Measure2" | Nbarrido == "Measure3" | Nbarrido == "Measure4")))
View(datos.tidy)
#etiquetando para facilitar trabajo futuro
rownames(datos.tidy)<-str_c(datos.tidy$archivo,"-B",str_remove(datos.tidy$Nbarrido,"Measure"))
View(datos.tidy)
View(datos.tidy)
?cor
cor(datos.tidy)
View(datos.tidy)
head(datos.tidy[3:,:])
head(datos.tidy[3:])
View(datos.tidy)
head(select_if(datos.tidy,is.numeric))
head(t(select_if(datos.tidy,is.numeric)))
select_if(datos.tidy,is.numeric) %>% t() %>% cor()
scor <- datos.tidy %>% select_if(is.numeric) %>% t() %>% cor()
View(datos.tidy)
library("pheatmap")
pheatmap(scor)
View(datos.tidy)
View(scor)
heatmap(scor, scale = F)
heatmap(scor, scale = "none")
heatmap(scor)
scorPEPu <- datos.tidy %>% filter(grupo == "PE" | grupo == "Pu") %>% select_if(is.numeric) %>% t() %>% cor()
View(scorPEPu)
View(scorPEPu)
datos.tidy %>% filter(grupo == "PE" | grupo == "Pu") %>% head()
View(datos.tidy)
datos.tidy %>% filter(grupo == "PE" | grupo == "Pu") %>% view()
datos.tidy %>%
rownames_to_column('gene') %>% filter(grupo == "PE" | grupo == "Pu") %>%
column_to_rownames('gene') %>% view()
scorPEPu <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "Pu") %>% select_if(is.numeric) %>%
column_to_rownames('barrido') %>% t() %>% cor()
scorPEPu <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "Pu") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% column_to_rownames('barrido') %>% t() %>% cor()
scorPEPu <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "Pu") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% column_to_rownames('barrido') %>% t() %>% cor()
scorPEPu <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "Pu") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
View(scorPEPu)
pheatmap(scorPEPu)
View(scorPEPu)
scorPERD <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "RD") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
library(tidyverse)
library("pheatmap")
scorPERD <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "RD") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
pheatmap(scorPERD)
scorPETN <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "TN") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
pheatmap(scorPETN)
scorPuRD <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "Pu" | grupo == "RD") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
pheatmap(scorPuRD)
scorPuTN <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "Pu" | grupo == "TN") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
pheatmap(scorPuTN)
scorRDTN <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "RD" | grupo == "TN") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
pheatmap(scorRDTN)
#es más fácil de visualizar si comparo entre dos grupos
scorPEPu <- datos.tidy %>% rownames_to_column('barrido') %>%
filter(grupo == "PE" | grupo == "Pu") %>% column_to_rownames('barrido') %>%
select_if(is.numeric) %>% t() %>% cor()
pheatmap(scorPEPu)
?gather
View(datos.tidy)
#alternativa: ver los espectros mediante ggviolin
#x e y serían longitud de onda e intesidad, así que necesito ordenar los datos un poco
datos.gathered <- datos.muestras %>% gather(key = "Wavelength", value = "Intensity",-grupo,-archivo,-Nbarrido)
#alternativa: ver los espectros mediante ggviolin
#x e y serían longitud de onda e intesidad, así que necesito ordenar los datos un poco
datos.gathered <- datos.tidy %>% gather(key = "Wavelength", value = "Intensity",-grupo,-archivo,-Nbarrido)
View(datos.gathered)
?as_numeric
?as.numeric
#alternativa: ver los espectros mediante ggviolin
#x e y serían longitud de onda e intesidad, así que necesito ordenar los datos un poco
datos.gathered <- datos.tidy %>% gather(key = "Wavelength", as.numeric(value = "Intensity"),-grupo,-archivo,-Nbarrido)
#alternativa: ver los espectros mediante ggviolin
#x e y serían longitud de onda e intesidad, así que necesito ordenar los datos un poco
datos.gathered <- datos.tidy %>% gather(key = "Wavelength", value = "Intensity",-grupo,-archivo,-Nbarrido, convert = TRUE)
View(datos.gathered)
?prcomp
#PCA
df_pca <- datos.tidy %>% select(-grupo,-archivo,-Nbarrido) %>% prcomp(scale. = T)
df_out <- as.data.frame(df_pca$x)
View(df_out)
View(df_out)
?left_join
library(tidyverse)
?left_join
View(df_out)
View(df_out)
df_out <- as_tibble(df_pca$x)
class(df_out)
?`$.tbl_df`
df_pca$x,sdev
df_pca$[x,sdev]
View(datos.tidy)
labels <- datos.tidy %>% select(grupo,archivo,Nbarrido) %>% rownames_to_column('barrido')
View(labels)
df_out <- df_out %>% rownames_to_column('barrido') %>% left_join(labels, by = "barrido") %>% column_to_rownames('barrido')
View(df_out)
#PCA
df_pca <- datos.tidy %>% select(-grupo,-archivo,-Nbarrido) %>% prcomp(scale. = T)
df_out <- as_tibble(df_pca$x)
labels <- datos.tidy %>% select(grupo,archivo,Nbarrido) %>% rownames_to_column('barrido')
View(df_out)
df_out <- as.data.frame(df_pca$x)
df_out <- df_out %>% rownames_to_column('barrido') %>% left_join(labels, by = 'barrido') %>% column_to_rownames('barrido')
View(df_out)
class(df_pca$x)
view(df_pca$x)
View(df_out)
class(df_out)
library(gplots)
screeplot(df_pca)
View(df_out)
p<-ggplot(df_out,aes(x=PC1,y=PC2,color=grupo ))
p<-p+geom_point()
p
View(df_out)
p<-ggplot(df_out,aes(x=PC1,y=PC2,color=Nbarrido ))
p<-p+geom_point()
p
ggplot(df_out,aes(x=PC1,y=PC2,color=grupo )) + geom_point()
View(datos.gathered)
#la idea es que pueda visualizarse los espectros para compararlos
datos.gathered %>% filter(grupo == "PE") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_point()
#la idea es que pueda visualizarse los espectros para compararlos, compuestos similares deberían tener el mismo espectro
datos.gathered %>% filter(grupo == "PE") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_line()
datos.gathered %>% filter(grupo == "Pu") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_line()
datos.gathered %>% filter(grupo == "RD") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_line()
datos.gathered %>% filter(grupo == "TN") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_line()
datos.gathered %>% filter(grupo == "TN") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_point()
#la idea es que pueda visualizarse los espectros para compararlos, compuestos similares deberían tener el mismo espectro
datos.gathered %>% filter(grupo == "PE") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) +
geom_area(fill = archivo, alpha = 0.5)
?geom_area
#la idea es que pueda visualizarse los espectros para compararlos, compuestos similares deberían tener el mismo espectro
datos.gathered %>% filter(grupo == "PE") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) +
geom_area(aes(fill = archivo, alpha = 0.5))
#la idea es que pueda visualizarse los espectros para compararlos, compuestos similares deberían tener el mismo espectro
datos.gathered %>% filter(grupo == "PE") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) +
geom_area(aes(fill = archivo, alpha = 5))
#la idea es que pueda visualizarse los espectros para compararlos, compuestos similares deberían tener el mismo espectro
datos.gathered %>% filter(grupo == "PE") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) +
geom_area(aes(fill = archivo, alpha = 0.1))
View(datos.gathered)
#la idea es que pueda visualizarse los espectros para compararlos, compuestos similares deberían tener el mismo espectro
datos.gathered %>% filter(grupo == "PE") %>% arrange(Wavelength) %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) +
geom_area(aes(fill = archivo, alpha = 0.1))
datos.gathered %>% filter(grupo == "Pu") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_line(aes(alpha = 0.1))
datos.gathered %>% filter(grupo == "RD") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_line(aes(alpha = 0.1))
datos.gathered %>% filter(grupo == "TN") %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) + geom_line(aes(alpha = 0.1))
#la idea es que pueda visualizarse los espectros para compararlos, compuestos similares deberían tener el mismo espectro
datos.gathered %>% filter(grupo == "PE") %>% arrange(Wavelength) %>%
ggplot(aes(x=Wavelength,y=Intensity,color=archivo )) +
geom_line(aes(alpha = 0.1))
View(datos.tidy)
tr <- datos.tidy %>% t()
tr <- t(datos.tidy)
View(tr)
library("tidyverse")
tr <- select_if(tr,is.numeric)
tr <- select_if(tr,is.numeric())
tr <- select_if(datos.tidy,is.numeric())
View(tr)
delete(tr)
clear(tr)
vec1 <- c(1,2,3,4)
vec2 <- c(1,2,3,4)
library("tidyverse")
mat2 <-as_tibble(cbind(vec1,vec2))
mat2
mat3 <- tibble(x = c(1,2,3,4),y = c(1,2,3,4))
mat3
trapz(mat3$x,mat3$y)
install.packages("pracma")
library(pracma)
trapz(mat3$x,mat3$y)
?trapz
trapz(mat3$x,mat3$y,2,3)
interpl(mat3$x,mat3$y,xi = 2.5, method = "linear")
interp1(mat3$x,mat3$y,xi = 2.5, method = "linear")
rm(vec1)
rm(vec2)
rm(mat2)
betwen(mat3$x,2,3)
between(mat3$x,2,3)
between(mat3$x,2,3) * mat3$x
mean(between(mat3$x,2,3) * mat3$x)
trapz(between(mat3$x,2,3) * mat3$x,mat3$y,2,3)
trapz(between(mat3$x,2,3) * mat3$x,mat3$y)
trapz(between(mat3$x,2,3) * mat3$x,between(mat3$x,2,3) * mat3$y)
between(mat3$x,2,3) * mat3$y
trapz(c(0,2,3,0),c(0,2,3,0)
)
trapz(c(2,3),c(2,3))
trapz(filter(mat3$x,between(mat3$x,2,3)),filter(mat3$y,between(mat3$x,2,3)))
class(mat3$x)
between(mat3$x,2.5,3.5)
between(mat3$x,1.5,3.5)
View(datos.gathered)
findintervals(mat3$x,2.1)
findintervals(2.1,mat3$x)
findintervals(3.5,mat3$x)
findintervals(3.51,mat3$x)
findintervals(3.99,mat3$x)
findintervals(1.2,mat3$x)
mutate(mat3,x + y)
mat3
mutate(mat3,z = x + y)
datos.gathered <- datos.gathered %>% mutate(barrido = str_c(archivo,"-B",str_remove(Nbarrido,"Measure")))
View(datos.gathered)
#extracción de características útiles para el análisis espectral
features <- datos.gathered %>% group_by(barrido) %>% summarise(w1 = findintervals(472.6,Wavelength))
View(features)
#extracción de características útiles para el análisis espectral
features <- datos.gathered %>% group_by(barrido) %>% summarise(w1 = findintervals(472.6,Wavelength), peak1 = Wavelength[w1])
View(features)
#extracción de características útiles para el análisis espectral
features <- datos.gathered %>% group_by(barrido) %>% summarise(w1 = findintervals(500.7,Wavelength), peak1 = Wavelength[w1])
View(features)
View(datos.tidy)
View(datos.gathered)
#extracción de características útiles para el análisis espectral
features <- datos.gathered %>% group_by(barrido) %>% summarise(w1 = findintervals(472.6,Wavelength), peak1 = Intensity[w1])
View(features)
#extracción de características útiles para el análisis espectral
features <- datos.gathered %>% group_by(barrido) %>% summarise(w1 = findintervals(472.6,Wavelength), peak1 = Wavelength[w1])
View(datos.gathered)
View(features)
View(features)
f = findintervals
features <- datos.gathered %>% group_by(barrido) %>%
summarise(w1 = f(472.6,Wavelength), peak1 = Wavelength[w1],
)
View(features)
features <- datos.gathered %>% group_by(barrido) %>%
summarise(peak1 = Intensity[f(472.6,Wavelength)],
)
View(features)
View(features)
features <- datos.gathered %>% group_by(barrido) %>%
summarise(peak1 = Intensity[f(472.6,Wavelength)],
peak2 = Intensity[f(492.99,Wavelength)],
peak3 = Intensity[f(500.7,Wavelength)],
peak4 = Intensity[f(512.24,Wavelength)]
)
View(features)
features <- datos.gathered %>% group_by(barrido) %>%
summarise(pico472.6 = Intensity[f(472.6,Wavelength)],
pico492.99 = Intensity[f(492.99,Wavelength)],
pico500.7 = Intensity[f(500.7,Wavelength)],
pico512.24 = Intensity[f(512.24,Wavelength)],
w1 = f(471,Wavelength),w2 = f(474.5,Wavelength),
integral471a474.5 = trapz(Wavelength[w1:w2],Intensity[w1:w2])
) %>%
select(-w1,-w2)
View(features)
#lo utilizo para obtener el índice de una longitud de onda dada
features <- datos.gathered %>% group_by(barrido) %>%
summarise(pico472.6 = Intensity[f(472.6,Wavelength)],
pico492.99 = Intensity[f(492.99,Wavelength)],
pico500.7 = Intensity[f(500.7,Wavelength)],
pico512.24 = Intensity[f(512.24,Wavelength)],
w1 = f(471,Wavelength),w2 = f(474.5,Wavelength),
integral471a474.5 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(488,Wavelength),w2 = f(497,Wavelength),
integral488a497 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
) %>%
select(-w1,-w2)
View(features)
#lo utilizo para obtener el índice de una longitud de onda dada
features <- datos.gathered %>% group_by(barrido) %>%
summarise(pico472.6 = Intensity[f(472.6,Wavelength)],
pico492.99 = Intensity[f(492.99,Wavelength)],
pico500.7 = Intensity[f(500.7,Wavelength)],
pico512.24 = Intensity[f(512.24,Wavelength)],
w1 = f(471,Wavelength),w2 = f(474.5,Wavelength),
integral471a474.5 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(488,Wavelength),w2 = f(497,Wavelength),
integral488a497 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(498,Wavelength),w2 = f(506,Wavelength),
integral498a506 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(509,Wavelength),w2 = f(515,Wavelength),
integral509a515 = trapz(Wavelength[w1:w2],Intensity[w1:w2])
) %>%
select(-w1,-w2)
View(features)
View(features)
#lo utilizo para obtener el índice de una longitud de onda dada
features <- datos.gathered %>% group_by(barrido) %>%
summarise(pico472.6 = Intensity[f(472.6,Wavelength)],
pico492.99 = Intensity[f(492.99,Wavelength)],
pico500.7 = Intensity[f(500.7,Wavelength)],
pico512.24 = Intensity[f(512.24,Wavelength)],
w1 = f(471,Wavelength),w2 = f(474.5,Wavelength),
integral471a474.5 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(488,Wavelength),w2 = f(497,Wavelength),
integral488a497 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(498,Wavelength),w2 = f(506,Wavelength),
integral498a506 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(509,Wavelength),w2 = f(515,Wavelength),
integral509a515 = trapz(Wavelength[w1:w2],Intensity[w1:w2])
) %>%
select(-w1,-w2) %>%
column_to_rownames('barrido')
View(features)
rm(features)
#lo utilizo para obtener el índice de una longitud de onda dada
featurevector <- datos.gathered %>% group_by(barrido) %>%
summarise(pico472.6 = Intensity[f(472.6,Wavelength)],
pico492.99 = Intensity[f(492.99,Wavelength)],
pico500.7 = Intensity[f(500.7,Wavelength)],
pico512.24 = Intensity[f(512.24,Wavelength)],
w1 = f(471,Wavelength),w2 = f(474.5,Wavelength),
integral471a474.5 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(488,Wavelength),w2 = f(497,Wavelength),
integral488a497 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(498,Wavelength),w2 = f(506,Wavelength),
integral498a506 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(509,Wavelength),w2 = f(515,Wavelength),
integral509a515 = trapz(Wavelength[w1:w2],Intensity[w1:w2])
) %>%
select(-w1,-w2) %>%
column_to_rownames('barrido')
View(featurevector)
featurepca <- prcomp(featurevector,scale. = TRUE)
featureout <- as.dataframe(featurepca$x)
featureout <- as.data.frame(featurepca$x)
View(featureout)
screeplot(featurepca)
View(labels)
featureout <- featureout %>% rownames_to_column('barrido') %>%
left_join(labels, by = 'barrido') %>% column_to_rownames('barrido')
View(featureout)
ggplot(featureout,aes(x=PC1,y=PC2,color=grupo )) + geom_point()
ggplot(featureout,aes(x=PC1,y=PC2,color=Nbarrido )) + geom_point()
rm(p)
#lo utilizo para obtener el índice de una longitud de onda dada
featurevector <- datos.gathered %>% group_by(barrido) %>%
mutate(val = Intensity[f(481.8,Wavelength)], Intensity = Intensity/val) %>%
summarise(pico472.6 = Intensity[f(472.6,Wavelength)],
pico492.99 = Intensity[f(492.99,Wavelength)],
pico500.7 = Intensity[f(500.7,Wavelength)],
pico512.24 = Intensity[f(512.24,Wavelength)],
w1 = f(471,Wavelength),w2 = f(474.5,Wavelength),
integral471a474.5 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(488,Wavelength),w2 = f(497,Wavelength),
integral488a497 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(498,Wavelength),w2 = f(506,Wavelength),
integral498a506 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(509,Wavelength),w2 = f(515,Wavelength),
integral509a515 = trapz(Wavelength[w1:w2],Intensity[w1:w2])
) %>%
select(-w1,-w2) %>%
column_to_rownames('barrido')
View(featurevector)
featurepca <- prcomp(featurevector,scale. = TRUE)
featureout <- as.data.frame(featurepca$x)
featureout <- featureout %>% rownames_to_column('barrido') %>%
left_join(labels, by = 'barrido') %>% column_to_rownames('barrido')
screeplot(featurepca)#las primeras dos componentes son suficientes
ggplot(featureout,aes(x=PC1,y=PC2,color=grupo )) + geom_point()
ggplot(featureout,aes(x=PC1,y=PC2,color=Nbarrido )) + geom_point()
?aes
View(featurevector)
#lo utilizo para obtener el índice de una longitud de onda dada
featurevector <- datos.gathered %>% group_by(barrido) %>%
mutate(val = Intensity[f(481.8,Wavelength)], Intensity = Intensity/val) %>%
summarise(w1 = f(471,Wavelength),w2 = f(474.5,Wavelength),
integral471a474.5 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(488,Wavelength),w2 = f(497,Wavelength),
integral488a497 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(498,Wavelength),w2 = f(506,Wavelength),
integral498a506 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
w1 = f(509,Wavelength),w2 = f(515,Wavelength),
integral509a515 = trapz(Wavelength[w1:w2],Intensity[w1:w2]),
pico472.6 = Intensity[f(472.6,Wavelength)],
pico492.99 = Intensity[f(492.99,Wavelength)],
pico500.7 = Intensity[f(500.7,Wavelength)],
pico512.24 = Intensity[f(512.24,Wavelength)]
) %>%
select(-w1,-w2) %>%
column_to_rownames('barrido')
View(featurevector)
ggplot(featureout,aes(x=PC1,y=PC2,color=grupo )) + geom_point() + xlim(-3,3)
ggplot(featureout,aes(x=PC1,y=PC2,color=grupo )) + geom_point() + xlim(-2,2)
ggplot(featureout,aes(x=PC1,y=PC2,color=grupo )) + geom_point() + xlim(-1.5,1.5)
View(featurevector)
View(datos.muestras)
View(datos.tidy)
View(featureout)
View(featurevector)
#PCA
df_pca <- datos.tidy %>% select(-grupo,-archivo,-Nbarrido) %>% prcomp(scale. = T)
df_out <- as.data.frame(df_pca$x)
labels <- datos.tidy %>% select(grupo,archivo,Nbarrido) %>% rownames_to_column('barrido')
df_out <- df_out %>% rownames_to_column('barrido') %>%
left_join(labels, by = 'barrido') %>% column_to_rownames('barrido')
ggplot(df_out,aes(x=PC1,y=PC2,color=grupo )) + geom_point()
ggplot(df_out,aes(x=PC1,y=PC2,color=grupo )) + geom_point() + xlim(-20,20)
View(datos.gathered)
