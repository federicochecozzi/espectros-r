library(tidyverse)

setwd("C:/Users/Federico/Documents/R/Ejercicios variables continuas")

RNAseq<-read.table("datos_EDA.txt", sep = "\t")

#filter(RNAseq,ESC != 0 || ESC.1 != 0 || HC11_Pro != 0 || HC11_Pro.1 != 0)
#filtra todas las filas con entradas completamente nulas, pues significa que no se detect? el gen
RNAseq<-filter_all(RNAseq, any_vars(. != 0))

#an?lisis 1: los genes son las variables

#la transposici?n ordena la tabla como le gusta a R
RNAseq<- t(RNAseq) 

RNAseq<- scale(RNAseq)
#deseo filtrar por significancia

#lshap <- lapply(RNAseq, shapiro.test)
#lres <- sapply(lshap, `[`, c("statistic","p.value")) mala idea

#ojo con esto, probablemente es una idea est?pida (poblaci?n baja)
test_res <- colttests(RNAseq, fac = as_factor(rep(c("ESC","HC11"),each = 2))) # la columna pop indica cuales son los grupos

head(test_res)

test_res %>%
  ggplot(aes(p.value)) +
  geom_histogram(bins = 100) +
  theme_minimal()

adjP_bonf <- p.adjust(test_res$p.value, method = "bonferroni")
enframe(adjP_bonf) %>%
  ggplot(aes(value)) +
  geom_histogram(bins = 100) +
  theme_minimal()

RNAseqfilt <- RNAseq[,which(test_res$p.value <= 0.05)]

#an?lisis 2: las variables son los nombres de las muestras esta vez
shapiro.test(RNAseq$ESC)
shapiro.test(RNAseq$ESC.1)
shapiro.test(RNAseq$HC11_Pro)
shapiro.test(RNAseq$HC11_Pro.1)
#no son variables normales
wilcox.test(RNAseq$ESC,RNAseq$ESC.1)
wilcox.test(RNAseq$HC11_Pro,RNAseq$ESC.1)
wilcox.test(RNAseq$ESC,RNAseq$HC11_Pro)
wilcox.test(RNAseq$ESC.1,RNAseq$HC11_Pro.1)
